<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on Akira Nakada&#39;s Portfolio</title>
    <link>https://tubisuke.github.io/blogs/</link>
    <description>Recent content in Blogs on Akira Nakada&#39;s Portfolio</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sun, 24 Nov 2024 18:38:45 +0900</lastBuildDate><atom:link href="https://tubisuke.github.io/blogs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>2023年度を振り返って</title>
      <link>https://tubisuke.github.io/blogs/post05/</link>
      <pubDate>Sun, 24 Nov 2024 18:38:45 +0900</pubDate>
      
      <guid>https://tubisuke.github.io/blogs/post05/</guid>
      <description>はじめに 2024年度に入って結構経ちますが，改めて2023年度について振り返ってみようと思います（執筆途中）． 就活用の研究紹介と未来の自分・後輩のために． 個人的に，2023年度は研究面で色々なことに挑戦した一年でした． 参加した学会 2023年度に参加した学会は，以下の4つです． NLP若手の会第18回シンポジウム (YANS2023) 2023/8/29 - 2023/8/31 仲田明良, 狩野芳伸（2023）,「打ち言葉に特化させた学習手法を用いた親密度推定モデル」,『NLP若手の会（YANS）第18回シンポジウム』 NTCIR-17 カンファレンス 2023/12/12 - 2023/12/15 Akira Nakada, Yoshinobu Kano（2023）,「KIS’s Stance Classification Model at the NTCIR-17 QA Lab-PoliInfo-4」,『Proceedings of the 17th NTCIR Conference on Evaluation of Information Access Technologies』 第16回データ工学と情報マネジメントに関するフォーラム（DEIM2024） 2024/2/28 - 2024/3/1 2024/3/4 - 2024/3/5 仲田明良, 狩野芳伸（2024）,「同一ハッシュタグ投稿に着目した対照学習によるトピック類似性を捉えた文ベクトルの獲得」,『第16回データ工学と情報マネジメントに関するフォーラム（DEIM2024）』 言語処理学会第30回年次大会（NLP2024） 2024/3/11 - 2024/3/15 仲田明良, 狩野芳伸（2024）,「Style SimCSE: SNSユーザ同一性に基づく対照学習によるスタイル類似性を捉えた文ベクトルの獲得」 こう見ると，1年の間に4つの学会に参加していることがわかります． よく頑張った！！自分！！ 同じ研究テーマで複数回発表したわけではなく，それぞれ異なった研究テーマで発表を行いました． </description>
    </item>
    
    <item>
      <title>大学図書館検索システムの改良</title>
      <link>https://tubisuke.github.io/blogs/post04/</link>
      <pubDate>Sun, 24 Nov 2024 18:38:45 +0900</pubDate>
      
      <guid>https://tubisuke.github.io/blogs/post04/</guid>
      <description>はじめに 今回作ったシステムは，静岡大学図書館の蔵書検索システムであるOPACを改良したものです． OPACは，非常に便利ですが，過去に読んだ本を見返すときに不便であると感じていました． また，せっかく自分以外の利用者が多くいるなら，他の学生の評価によって，検索の表示順を変えれるといいなあと思いました． そこで，既存のOPACで行える検索機能に加え，新たな機能を盛り込んだWEBシステムの構築を行いました． 技術スタック python Django データ収集 Google book API CiNii Book API データ収集 データの収集に関しては，以下のように行います． CiNii Book API：静岡大学図書館が保有する本の情報を取得する． タイトルやISBNなど なお，基本的に大学図書館ごとの識別番号を変更すれば，他の大学の図書館の情報も取得できます． Google book API：本の画像情報を取得する． 収集した本の情報は，後述する我々のシステムからアクセスすることができます． システムの機能 既存のOPACで行える検索機能に加え，追加した機能は以下の通りです． 読みたい本のステータスを管理する機能 読む前・読んでいる・読み終わった 読んだ本のレーティング（星の数）をつける機能 1~5の5段階 本の検索の上位に他のユーザーが評価した本を表示する機能 システムの動作イメージ 出来上がったシステムは以下の通りです． 検索画面 トップページ 検索結果 このとき，他のユーザが高く評価した本から上位に表示されます． ブックマークへの追加 タグを指定してブックマークリストに追加することができます． レーティング（星の数）をつける 本システムで一番実現したかった機能です． 1~5の5段階で評価することができます． 本のステータスを変更することもできます． まとめ 今回のシステムは，既存のOPACを使う中で感じた改善点を取り入れたWEBシステムです． 日頃，無意識に使っている大学のシステムですが，見つめてみると改善点が見つかるものです． このような視点は大事にしていきたいと思います． 今後としては，レコメンド周りの勉強のために，機械学習を取り入れたレコメンド機能を追加していきたいと考えています． </description>
    </item>
    
    <item>
      <title>位置情報に基づいた音楽アプリ</title>
      <link>https://tubisuke.github.io/blogs/post03/</link>
      <pubDate>Sun, 24 Nov 2024 18:38:09 +0900</pubDate>
      
      <guid>https://tubisuke.github.io/blogs/post03/</guid>
      <description>※このプロジェクトは，現在進行形のプロジェクトになります．
はじめに 概要 今回作成したのは，位置情報に基づいた音楽アプリです． 動機 海の近くを運転しているときに助手席に乗っている人に言いました． 「海っぽい音楽流して〜」 これ自動でできたら便利じゃね？？（ひらめきの音） そもそも，人が音楽を聴くタイミングというのは，何か他のことに集中している場合が多いです． そのため，音楽を選ぶのが面倒だったり，選ぶ余裕がなかったりします． そこで，その場所の特徴に合わせた音楽を自動で流すアプリを作成することにしました． 加えて，そのタイミングの時間・天気・季節などによっても音楽を変えることができるようにしました． 技術スタック バックエンド Python FastAPI アプリ Swift データ収集 Spotify API OpenWeatherAPI Google Maps API システムの概要 僕は，主にバックエンドの開発を担当しました． そこで，フロント側から送られてきた位置情報をもとに，その場所に合った音楽を選定し，トラックIDを返すAPIを作成しました（予定）． このとき，音楽を選定するための特徴量は以下の通りです（予定）． 周辺施設 時間 天気 季節 移動スピード 移動距離 このAPIを外部から読み出せるようにGCPのCloud Runにデプロイしました． 以下はイメージです． 各種APIから取得したデータをもとに，音楽を選定し，その情報を返すAPIです． まとめ このアプリが完成すれば，音楽レコメンドは画期的なものになると思います． 継続して開発を進めていきたいと思います． </description>
    </item>
    
    <item>
      <title>猫の迷路ゲームの作成</title>
      <link>https://tubisuke.github.io/blogs/post02/</link>
      <pubDate>Fri, 21 Jul 2023 22:15:06 +0900</pubDate>
      
      <guid>https://tubisuke.github.io/blogs/post02/</guid>
      <description>はじめに 今回作成したのは，猫の迷路ゲームです． このゲームは，大学1年時の「プログラミング」という授業の課題で作成したものになります． JavaFXを利用した迷路ゲームのテンプレートが配布され，それを元にグループごとにアレンジを加えて作成するというものでした． 技術スタック Java JavaFX デモ動画 以下に，作成した猫の迷路ゲームのデモ動画を掲載します． 最短経路を表示したり，BGMを流したりなどのオリジナル機能を盛り込みました． 敵を作ったのも僕たちのチームだけのアイデアでした（懐かしい）． 動画を再生するにはvideoタグをサポートしたブラウザが必要です。
まとめ 大学に入って最初のグループワーク（大学1年次）で作成したゲームです．なので，個人的にも色々大変で思い出深い作品です． 全体で評価において2位を獲得したのもいい思い出です． たしか20チームくらいあったと思います． </description>
    </item>
    
    <item>
      <title>キャンパスペイ便利システムの構築</title>
      <link>https://tubisuke.github.io/blogs/post01/</link>
      <pubDate>Mon, 19 Jun 2023 15:42:51 +0900</pubDate>
      
      <guid>https://tubisuke.github.io/blogs/post01/</guid>
      <description>はじめに いつごろ作ったのか 今回作成したのは，大学のキャンパスペイ便利システムです．このシステムは，大学2年時の「応用プログラミングC」の授業で作成したものになります． 目的 目的としては，静岡大学の生協で使用することができる決済カードである「キャンパスペイ」の残高確認や履歴確認を行うためのシステムを作ることです． このシステムを作った当時は，キャンパスペイの残高確認や履歴確認を行うための公式アプリが存在しなかったため，自分で作成することにしました． （なお，現在は便利なアプリが公式から公開されました．．） 技術スタック Python JavaScript IoT（NFC） アイデア このシステムのポイントは，キャンパスペイをキーとしてどれだけ楽に残高確認や履歴確認を行えるかということです． 元々，生協サイトにログインすれば，残高を確認することはできましたが，ログインするのが面倒だったり，そもそもそのサイトを知らない学生も多いという状況でした． そこで，キャンパスペイをかざすだけで残高確認や履歴確認ができるシステムの構築を行うことにしました． システムの概要 システムの利用イメージは以下の通りです． カードリーダーにキャンパスペイをかざし，ログイン情報を保存しておくことで，以降はキャンパスペイをかざすだけで残高確認や履歴確認ができます． 利用イメージ システムの利用イメージは以下の通りです． カードの読み取り カードをかざすだけで，カードの情報を読み取ります． 新規登録の場合は，カード情報とログイン情報を紐づけて保存します． 既存のユーザーの場合は，カード情報からログイン情報を取得して，残高や利用履歴を表示します． 動画を再生するにはvideoタグをサポートしたブラウザが必要です。
利用履歴の確認 動画 動画を再生するにはvideoタグをサポートしたブラウザが必要です。
読み取り画面 読み込みボタンを押すことで，pythonのfelicaカード読み取りプログラムが呼び出され，読み取りが行われます． 新規登録画面 データベースに登録されていないユーザがカードを読み込んだ場合に，新規登録画面に遷移し，idm(カード識別番号)に対応したユーザIDとパスワードを入力します． モード選択画面 残高表示とランキング表示の2つの機能の選択を行います． 残高確認画面 視覚的に残高を表示します. 購入品ランキング画面 1年間の購入品の中で，購入回数が多い上位3品を表示します． </description>
    </item>
    
  </channel>
</rss>
